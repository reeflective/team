# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  unix:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Teamclient example
      working-directory: example/teamclient
      run: go build -v .

    - name: Teamserver example (default/go_sqlite)
      working-directory: example/teamserver
      run: go build -v

    - name: Teamserver example (wasm_sqlite)
      working-directory: example/teamserver
      run: go build -v -tags wasm_sqlite .

    - name: Teamserver example (cgo_sqlite)
      working-directory: example/teamserver
      run: go build -v -tags cgo_sqlite .

    - name: Run coverage (go_sqlite)
      run: go test -tags go_sqlite -v -race -coverprofile=coverage.txt -covermode=atomic ./...
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3

  windows:
    runs-on: windows-latest 

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21

    - name: Version information
      run: bash teamserver_version_info 
      working-directory: internal/version

    - name: Teamclient example
      working-directory: example/teamclient
      run: go build -v .

    - name: Teamserver example (default/go_sqlite)
      working-directory: example/teamserver
      run: go build -v

    - name: Teamserver example (wasm_sqlite)
      working-directory: example/teamserver
      run: go build -v -tags wasm_sqlite .

    - name: Teamserver example (cgo_sqlite)
      working-directory: example/teamserver
      run: go build -v -tags cgo_sqlite .
